#!/bin/bash

INSTALL_LOG="/var/log/nuxeo_install.log"
echo "Nuxeo Installation Script Starting" > ${INSTALL_LOG}

ES_VERSION="6.5.4"

# Increase open files limit
echo '*       soft    nofile      4096' >> /etc/security/limits.conf
echo '*       hard    nofile      8192' >> /etc/security/limits.conf

# Add the nuxeo repository to the repository list
code=$(lsb_release -cs)
echo "deb http://apt.nuxeo.org/ $code releases" > /etc/apt/sources.list.d/nuxeo.list

# Register the nuxeo key
wget -q -O- http://apt.nuxeo.org/nuxeo.key | apt-key add -

# Pre-accept Sun Java license & set Nuxeo options
echo nuxeo nuxeo/bind-address select 127.0.0.1 | debconf-set-selections
echo nuxeo nuxeo/http-port select 8080 | debconf-set-selections
echo nuxeo nuxeo/database select Autoconfigure PostgreSQL | debconf-set-selections

# Upgrade packages and install apache, ssh, ...
echo "Nuxeo Installation Script: Apache, upgrade packages, etc." | tee -a ${INSTALL_LOG}
export DEBIAN_FRONTEND=noninteractive
locale-gen en_US.UTF-8
update-locale LANG=en_US.UTF-8
apt-get update
apt-get -q -y upgrade
apt-get -q -y install apache2
echo "Please wait a few minutes for you instance installation to complete" > /var/www/html/index.html
apt-get -q -y install openssh-server openssh-client vim apt-transport-https
echo "Nuxeo Installation Script: Apache, upgrade packages, etc. => DONE" | tee -a ${INSTALL_LOG}

# Install Java
echo "Nuxeo Installation Script: Install Java" | tee -a ${INSTALL_LOG}
apt-get -q -y install openjdk-11-jdk
echo "Nuxeo Installation Script: Install Java => DONE" | tee -a ${INSTALL_LOG}

#install elasticsearch
echo "Nuxeo Installation Script: Install Elasticsearch" | tee -a ${INSTALL_LOG}
wget -qO - https://artifacts.elastic.co/GPG-KEY-elasticsearch | apt-key add -
wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-$ES_VERSION.deb
wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-$ES_VERSION.deb.sha512
shasum -a 512 -c elasticsearch-$ES_VERSION.deb.sha512
dpkg -i elasticsearch-$ES_VERSION.deb
/bin/systemctl daemon-reload
/bin/systemctl enable elasticsearch.service
/usr/share/elasticsearch/bin/elasticsearch-plugin install analysis-kuromoji
/usr/share/elasticsearch/bin/elasticsearch-plugin install analysis-icu
#set default ES heap to 1G
sed -i 's/Xms2g/Xms1g/g' /etc/elasticsearch/jvm.options
sed -i 's/Xmx2g/Xmx1g/g' /etc/elasticsearch/jvm.options

service elasticsearch start
echo "Nuxeo Installation Script: Install Elasticsearch => DONE" | tee -a ${INSTALL_LOG}

# Install additional Repos
echo "Nuxeo Installation Script: Install Repositories" | tee -a ${INSTALL_LOG}
apt-get -q -y install ca-certificates curl software-properties-common
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -
add-apt-repository -y universe
add-apt-repository -y "deb [arch=amd64] https://download.docker.com/linux/ubuntu ${code} stable"
add-apt-repository -y ppa:certbot/certbot
apt-get update
echo "Nuxeo Installation Script: Install Repositories => DONE" | tee -a ${INSTALL_LOG}

# Install Certbot
echo "Nuxeo Installation Script: Install Certbot" | tee -a ${INSTALL_LOG}
apt-get -q -y install certbot python-certbot-apache
echo "Nuxeo Installation Script: Install Certbot => DONE" | tee -a ${INSTALL_LOG}

# Install Nuxeo
echo "Nuxeo Installation Script: Install Nuxeo" | tee -a ${INSTALL_LOG}
apt-get -q -y install nuxeo
service nuxeo stop
echo "Nuxeo Installation Script: Install Nuxeo => DONE" | tee -a ${INSTALL_LOG}

#skip wizard
#sed -i '/nuxeo.wizard.done=false/d' /etc/nuxeo/nuxeo.conf
#sed -i '1inuxeo.wizard.done=true' /etc/nuxeo/nuxeo.conf
#enable dev mode
sed -i '1iorg.nuxeo.dev=true' /etc/nuxeo/nuxeo.conf
#use standalone elasticsearch
sed -i '1ielasticsearch.addressList=localhost:9200' /etc/nuxeo/nuxeo.conf
#enable remote debugging
sed -i '1iJAVA_OPTS=$JAVA_OPTS -Xdebug -Xrunjdwp:transport=dt_socket,address=8787,server=y,suspend=n' /etc/nuxeo/nuxeo.conf

echo "Nuxeo Installation Script: Install Misc. (ffmpeg, etc.)" | tee -a ${INSTALL_LOG}
# Update some defaults
update-alternatives --set editor /usr/bin/vim.basic

apt-get install -q -y mediainfo ffmpeg x264 x265 figlet atop jq

# Install latest aws cli using pip
sudo apt-get install -y python3-pip
pip3 install awscli --upgrade --user
export PATH=$PATH:~/.local/bin/

apt-get -y clean
echo "Nuxeo Installation Script: Install Misc. (ffmpeg, etc.) => DONE" | tee -a ${INSTALL_LOG}

# Configure reverse-proxy
cat << EOF > /etc/apache2/sites-available/nuxeo-ssl.conf
<VirtualHost _default_:80>

    ServerName  HOSTNAME_GOES_HERE

    CustomLog /var/log/apache2/nuxeo_access.log combined
    ErrorLog /var/log/apache2/nuxeo_error.log

    Redirect permanent / https://HOSTNAME_GOES_HERE/

</VirtualHost>

<VirtualHost _default_:443 >

    ServerName  HOSTNAME_GOES_HERE

    CustomLog /var/log/apache2/nuxeo_access.log combined
    ErrorLog /var/log/apache2/nuxeo_error.log

    DocumentRoot /var/www

    ProxyRequests   Off
     <Proxy * >
        Order allow,deny
        Allow from all
     </Proxy>

    RewriteEngine   On
    RewriteRule ^/$ /nuxeo/ [R,L]
    RewriteRule ^/nuxeo$ /nuxeo/ [R,L]

    ProxyPass           /nuxeo/         http://localhost:8080/nuxeo/
    ProxyPassReverse    /nuxeo/         http://localhost:8080/nuxeo/
    ProxyPreserveHost   On

    # WSS
    ProxyPass         /_vti_bin/     http://localhost:8080/_vti_bin/
    ProxyPass         /_vti_inf.html http://localhost:8080/_vti_inf.html
    ProxyPassReverse /_vti_bin/     http://localhost:8080/_vti_bin/
    ProxyPassReverse /_vti_inf.html http://localhost:8080/_vti_inf.html

    RequestHeader   append nuxeo-virtual-host "https://HOSTNAME_GOES_HERE/"

    # Retain TLS1.1 for backwards compatibility until Jan 2020
    # These must be *after* the Certbot entry
    #XXX SSLProtocol all -SSLv2 -SSLv3 -TLSv1
    # SSLProtocol all -SSLv2 -SSLv3 -TLSv1 -TLSv1.1
    # Enable high ciphers for 3rd party security scanners
    #XXX SSLCipherSuite HIGH:!aNULL:!MD5:!3DES

    ## BEGIN SUPINT-655 ##
    <Location "/nuxeo/incl">
      RewriteRule .* - [R=404,L,NC]
    </Location>
    ## END SUPINT-655 ##
</VirtualHost>
EOF

# Add gzip compression for the REST API
cat > /etc/apache2/mods-available/deflate.conf <<EOF
<IfModule mod_deflate.c>
        <IfModule mod_filter.c>
                # these are known to be safe with MSIE 6
                AddOutputFilterByType DEFLATE text/html text/plain text/xml

                # everything else may cause problems with MSIE 6
                AddOutputFilterByType DEFLATE text/css
                AddOutputFilterByType DEFLATE application/x-javascript application/javascript application/ecmascript
                AddOutputFilterByType DEFLATE application/rss+xml
                AddOutputFilterByType DEFLATE application/xml
                AddOutputFilterByType DEFLATE application/json
        </IfModule>
</IfModule>
EOF

# Configure reverse-proxy
cat << EOF > /etc/apache2/sites-available/nuxeo.conf
<VirtualHost _default_:80>

    CustomLog /var/log/apache2/nuxeo_access.log combined
    ErrorLog /var/log/apache2/nuxeo_error.log

    DocumentRoot /var/www

    ProxyRequests Off
    <Proxy *>
        Order allow,deny
        Allow from all
    </Proxy>

    RewriteEngine On
    RewriteRule ^/$ /nuxeo/ [R,L]
    RewriteRule ^/nuxeo$ /nuxeo/ [R,L]

    ProxyPass        /nuxeo/ http://localhost:8080/nuxeo/
    ProxyPassReverse /nuxeo/ http://localhost:8080/nuxeo/
    ProxyPreserveHost On

    ## BEGIN SUPINT-655 ##
    <Location "/nuxeo/incl">
      RewriteRule .* - [R=404,L,NC]
    </Location>
    ## END SUPINT-655 ##
</VirtualHost>
EOF

a2enmod proxy proxy_http rewrite ssl headers
a2dissite 000-default
a2ensite nuxeo
apache2ctl -k graceful

# Drop unused "main" PostgreSQL cluster
pg_dropcluster --stop $(pg_lsclusters -h | grep main | awk '{print $1}') main


#decrease nuxeo startup priority
mv /etc/rc3.d/S*nuxeo /etc/rc3.d/S99nuxeo 

echo "Nuxeo Installation Script Complete" | tee -a ${INSTALL_LOG}
